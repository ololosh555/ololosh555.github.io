{"version":3,"sources":["TodoTemplate.js","TodoInsert.js","TodoListItem.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplate","children","className","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","placeholder","disabled","length","type","TodoListItem","todo","onRemove","onToggle","style","id","text","checked","cn","onClick","React","memo","prevProps","nextProps","TodoList","todos","rowRenderer","index","key","width","height","rowCount","rowHeight","list","outline","createBulkTodos","todoReducer","action","concat","filter","map","App","useReducer","undefined","dispatch","nextId","useRef","current","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2f19c06.chunk.js","sourcesContent":["import React from 'react'\r\nimport './TodoTemplate.scss';\r\n\r\nconst TodoTemplate = ({children}) => {//====================================(1)\r\n    return (\r\n        <div className=\"TodoTemplate\">\r\n            <div className=\"app-title\">일정관리</div>\r\n            <div className=\"content\">{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoTemplate","import React, { useCallback, useState } from 'react'\r\nimport {MdAdd} from 'react-icons/md'\r\nimport './TodoInsert.scss'\r\n\r\nconst TodoInsert = ({onInsert}) => {\r\n    const [value,setValue] =useState('');\r\n    const onChange = useCallback((e)=>{\r\n        setValue(e.target.value);\r\n    },[]);\r\n\r\n    const onSubmit = useCallback(\r\n        (e)=>{\r\n            onInsert(value); // 현재useState를 통해 관리하고있는 value값을 인자로 전달\r\n            setValue('')//value값 초기화\r\n            e.preventDefault();//============================================(1)\r\n        },\r\n        [onInsert,value],\r\n    )\r\n\r\n    return (\r\n        <form className=\"TodoInsert\" onSubmit={onSubmit}>\r\n            <input placeholder=\"할 일을 입력하세요\" value={value} onChange={onChange}/>\r\n            <button disabled= {value.length>0 ? false : true} type=\"submit\">\r\n                <MdAdd/>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoInsert\r\n\r\n","import React from 'react';\r\nimport './TodoListItem.scss';\r\nimport cn from 'classnames';//=================================================(1)\r\nimport { MdRemoveCircle, MdCheckBoxOutlineBlank, MdCheckBox, MdRemoveCircleOutline } from 'react-icons/md';\r\nimport { FaRegEdit} from 'react-icons/fa';\r\nimport {VscDiffRemoved, VscEdit} from 'react-icons/vsc';\r\nimport {FiEdit3} from 'react-icons/fi';\r\nimport {BiEditAlt} from 'react-icons/bi';\r\n//=================================================(2)\r\n\r\nconst TodoListItem = ({ todo, onRemove, onToggle, style }) => {\r\n    const { id, text, checked } = todo;\r\n\r\n    return (                \r\n    //<div className={cn('checkbox', { checked })} onClick={() => onToggle(id)}> 아래\r\n    //==============================================(1-1)  \r\n        <div className=\"TodoListItem-virtualized\" style={style}>\r\n            <div className=\"TodoListItem\">\r\n                <div className={cn('checkbox', { checked })} onClick={() => onToggle(id)}>\r\n                    {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n                    <div className=\"text\">{text}</div>\r\n                </div>\r\n                <div className=\"edit\" onClick={() => onRemove(id)}>\r\n                    <FiEdit3 />\r\n                </div>\r\n                <div className=\"remove\" onClick={() => onRemove(id)}>\r\n                    <MdRemoveCircleOutline />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo( //===========================================(3)\r\n   TodoListItem, (prevProps, nextProps) => prevProps.todo === nextProps.todo\r\n); //하면 끝.!","import React, { useCallback } from 'react';\r\nimport {List} from 'react-virtualized' // ========================(1)\r\nimport TodoListItem from './TodoListItem';\r\nimport './TodoList.scss';\r\n\r\n//app에서 todos를정의한것을 아래에 넣어줘서 받아옴\r\nconst TodoList = ({todos,onRemove, onToggle}) => {\r\n\r\n    const rowRenderer = useCallback(\r\n        ({index,key,style})=>{\r\n            const todo = todos[index];\r\n            return(\r\n                <TodoListItem \r\n                todo={todo} \r\n                key={key} \r\n                onRemove={onRemove} \r\n                onToggle={onToggle} \r\n                style={style}\r\n                />\r\n            )\r\n        },[onRemove, onToggle, todos]\r\n    )\r\n\r\n    return(\r\n        <List\r\n      className=\"TodoList\"\r\n      width={512}\r\n      height={741}\r\n      rowCount={todos.length}\r\n      rowHeight={57}\r\n      rowRenderer={rowRenderer}//항목 랜더링을할때 쓰는 함수\r\n      list={todos}\r\n      style={{ outline: 'none' }}\r\n    />\r\n    )\r\n}\r\n\r\nexport default React.memo(TodoList); \r\n//todolist의 부모컴포넌트가 app인데 그게 렌더링 될 때가 todolist가 \r\n//업데이트 될 때인데 React.memo를써도 영향이 없다.","import React,{useRef, useCallback, useReducer} from 'react'\nimport TodoTemplate from './TodoTemplate';\nimport TodoInsert from './TodoInsert';\nimport TodoList from './TodoList';\n\n//오늘할일1~20 배열에 담아 생성\nfunction createBulkTodos(){//======================================(4)\n  const array = [];\n  /*for (let i = 1; i<20; i++){\n    array.push({\n      id:i,\n      text:`오늘할일${i}`,\n      checked:false,\n    }) \n  }*/\n  return array\n}\n\n\n//리듀서==========================================================(1)\nfunction todoReducer(todos, action) {\n    switch (action.type) {\n        case 'INSERT':\n            return todos.concat(action.todo);\n        case 'REMOVE':\n            return todos.filter((todo) => todo.id !== action.id);\n        case 'TOGGLE':\n            return todos.map((todo) =>\n                todo.id === action.id ? { ...todo, checked: !todo.checked } : todo,\n            );\n            \n        default:\n            return todos;\n    }\n}\n\nconst App = () => {\n\n    const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);//===(2)\n    const nextId = useRef(1); // id값은 1부터시작============================(3)\n\n    //props전달할 함수는 useCallback\n    //insert\n    const onInsert = useCallback((text) => {\n            const todo = {id: nextId.current, text, checked: false};\n            dispatch({ type: 'INSERT', todo });\n            nextId.current += 1;\n        },[]);\n\n    //remove\n    const onRemove = useCallback((id) => {\n        dispatch({ type: 'REMOVE', id });\n    }, []);\n\n    //check\n    const onToggle = useCallback((id) => {\n        dispatch({ type: 'TOGGLE', id });\n    }, []);\n\n    return (\n        <TodoTemplate>\n            <TodoInsert onInsert={onInsert} />\n            {\n              todos.length > 0\n              ? <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n              : <div className=\"TodoListItem\"> 등록된 일정이 없습니다. </div>\n            }\n        </TodoTemplate>\n    );\n};\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}